# 818. Реалізуйте клас MoneyBox для роботи з віртуальною скарбничкою. 
# Кожна скарбничка має обмежену місткість, яка виражається цілим числом n - кількістю монет, 
# які можна покласти в скарбничку. Клас повинен підтримувати інформацію про кількість 
# монет в скарбничці, надавати можливість додавати монети в скарбничку і дізнаватися, 
# чи можна додати в скарбничку ще якусь кількість монет, не перевищуючи її місткість. 
# Клас повинен мати наступний вигляд
"""
class MoneyBox:
    def __init__(self, capacity):
        # Конструктор з аргументом - місткість скарбнички

    def can_add(self, v):
        # True, якщо можна додати v монет, False інакше

    def add(self, v):
        # Покласти v монет в скарбничку
"""
# При створенні скарбнички, число монет в ній дорівнює 0. Врахуйте, що метод add(self, v) 
# буде викликатися лише тоді, якщо can_add(self, v) повертає True. 
# Дані вводиться користувачем в такому порядку: n - місткість скарбнички, m - скільки 
# монет поклали в скарбничку, k - кількість монет, які хочуть покласти в скарбничку. 
# Результатом має бути одне з двох значень: True чи False.

class MoneyBox:
    def __init__(self, capacity, n = 0):
        # Конструктор з аргументом - місткість скарбнички
        self.capacity = capacity
        self.n = n

    def can_add(self, v):
        # True, якщо можна додати v монет, False інакше
        if self.capacity - self.n > v:
            return True
        
        else:
            return False

    def add(self, v):
        # Покласти v монет в скарбничку
        self.n = self.n + v
        print(v)
        print(self.n)


mb_1 = MoneyBox(15, 12)
print(mb_1.capacity)
print(mb_1.n)
print(mb_1.can_add(2))

if mb_1.can_add == True:
    mb_1.add(2)
    print(mb_1.capacity)
    print(mb_1.n)